<% layout('/layouts/boilerplate') -%>

<style>
    body {
        background-color: #f9f9fb;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        color: #333;
    }

    .card {
        border-radius: 1.5rem;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 25px rgba(0, 0, 0, 0.08);
    }

    canvas {
        max-width: 100%;
        height: auto !important;
        margin-top: 1rem;
        padding: 0.5rem;
        background-color: #fff;
        border-radius: 50%;
        box-shadow: 0 0 12px rgba(0, 0, 0, 0.05);
    }
</style>

<div class="container mt-5 mb-5">
    <div class="text-center mb-5">
        <h1 class="display-5 fw-bold">ðŸ‘¤ User Profile</h1>
        <p class="text-muted">View your personal info and performance summary</p>
    </div>

    <!-- User Info Card -->
    <div class="card shadow-sm rounded-4 mb-5">
        <div class="card-body p-4">
            <h3 class="fw-semibold mb-3">Welcome, <%= currentUser.username %></h3>
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><strong>Email:</strong> <%= currentUser.email %></li>
                <li class="list-group-item"><strong>Phone:</strong> <%= currentUser.phone || 'Not provided' %></li>
                <li class="list-group-item"><strong>Time Spent on Website:</strong> <span id="timeSpentDisplay">Loading...</span></li>

                <script>
                    function formatTimeSpent(totalMinutes) {
                        let totalSeconds = totalMinutes * 60;
                        const d = Math.floor(totalSeconds / (3600 * 24));
                        totalSeconds %= 3600 * 24;
                        const hr = Math.floor(totalSeconds / 3600);
                        totalSeconds %= 3600;
                        const m = Math.floor(totalSeconds / 60);
                        const s = Math.floor(totalSeconds % 60);

                        if (d > 0) {
                            return `${d}d ${hr}hr ${m}m ${s}s`;
                        } else if (hr > 0) {
                            return `${hr}hr ${m}m ${s}s`;
                        } else if (m > 0) {
                            return `${m}m ${s}s`;
                        } else if (s > 0) {
                            return `${s}s`;
                        } else {
                            return `00s`;
                        }
                    }

                    document.addEventListener('DOMContentLoaded', () => {
                        const timeSpent = <%= currentUser.timeSpent || 0 %>;
                        document.getElementById('timeSpentDisplay').textContent = formatTimeSpent(timeSpent/60);
                    });
                </script>
            </ul>
        </div>
    </div>

    <!-- Progress Charts -->
    <div class="text-center mb-4">
        <h2 class="fw-semibold">ðŸ“Š High Scores by Subject</h2>
        <p class="text-muted">Track your test performance over time</p>
    </div>

    <% if (progress && progress.length > 0) { %>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <%
            var progressBySubject = {};
            for (var i = 0; i < progress.length; i++) {
                var subj = progress[i].subject;
                if (!progressBySubject[subj]) {
                    progressBySubject[subj] = [];
                }
                progressBySubject[subj].push(progress[i]);
            }
            var chartIndex = 0;
        %>

        <div class="row g-4">
            <% for (var subject in progressBySubject) {
                var scores = [], outofs = [];
                var sessions = progressBySubject[subject];
                for (var j = 0; j < sessions.length; j++) {
                    scores.push(sessions[j].score);
                    outofs.push(sessions[j].outof || sessions[j].totalQuestions);
                }
                var latestScore = scores[scores.length - 1];
                var latestOutof = outofs[outofs.length - 1];
            %>
                <div class="col-6 col-md-4 col-lg-3 d-flex justify-content-center">
                    <div class="card shadow-lg border-0 rounded-4 p-3 w-100 text-center">
                        <canvas id="progressChart<%= chartIndex %>" height="200"></canvas>
                        <h5 class="mt-3 text-primary fw-semibold"><%= subject %></h5>
                    </div>
                </div>

                <script>
                    (function () {
                        const ctx = document.getElementById('progressChart<%= chartIndex %>').getContext('2d');

                        const data = {
                            labels: ['Score','Score'],
                            datasets: [{
                                data: [<%= latestScore %>, <%= latestOutof - latestScore %>],
                                backgroundColor: ['#3c2559', '#dcd3ea'],
                                borderColor: '#f9f9fb',
                                borderWidth: 2,
                                hoverOffset: 8
                            }]
                        };

                        const config = {
                            type: 'doughnut',
                            data: data,
                            options: {
                                responsive: true,
                                cutout: '65%',
                                plugins: {
                                    legend: {
                                        display: false
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: function () {
                                                return `Score: <%= latestScore %> / <%= latestOutof %>`;
                                            }
                                        }
                                    }
                                }
                            }
                        };

                        new Chart(ctx, config);
                    })();
                </script>
            <% chartIndex++; } %>
        </div>
    <% } else { %>
        <div class="alert alert-warning text-center mt-4">
            No progress data available.
        </div>
    <% } %>
</div>
